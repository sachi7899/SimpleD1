import requests
import logging
import time

# Configuration
ARTIFACTORY_URL = 'https://artifa.com/artifactory'
API_ENDPOINT = '/api/repositories?type=local'
AUTH = ('admin', 'password')  # Replace 'password' with the actual password

# Set up logging
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

def fetch_repo_keys():
    response = requests.get(f'{ARTIFACTORY_URL}{API_ENDPOINT}', auth=AUTH)
    if response.status_code == 200:
        return [repo['key'] for repo in response.json()]
    else:
        logging.error(f"Failed to fetch repository keys. Status code: {response.status_code}")
        logging.error(f"Response content: {response.content}")
        return []

def migrate_repository(repo_key):
    start_time = time.time()
    post_response = requests.post(f'{ARTIFACTORY_URL}/api/federation/migrate/{repo_key}', auth=AUTH)
    elapsed_time = time.time() - start_time

    if post_response.status_code == 200:
        logging.info(f"Migration successful for repo_key: {repo_key}")
    else:
        logging.error(f"Migration failed for repo_key: {repo_key}")
        logging.error(f"Response content: {post_response.content}")

    logging.info(f"Time taken for migrating {repo_key}: {elapsed_time:.2f} seconds")

def main():
    repo_keys = fetch_repo_keys()
    if not repo_keys:
        logging.error("No repository keys to migrate.")
        return

    for repo_key in repo_keys:
        migrate_repository(repo_key)

if __name__ == '__main__':
    main()
